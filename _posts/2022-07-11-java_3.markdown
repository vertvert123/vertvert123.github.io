---
layout: post
title: "input output"
description: Java에서 쓰는 데이터의 입출력들을 알아보자.
date: 2022-07-11 20:30:00
categories: Java
---

Java에서 데이터의 입출력을 통해 값을 받고 내보내 줍니다.<br>

간단한 예시를 통해 Scanner에 대해 알아봅시다.


### 백준 1000번 문제

<br>

```java

import java.util.Scanner;

public class Num_1000 {
    public static void main(String[] args) {

        Scanner scan = new Scanner(System.in);

        int a = scan.nextInt();
        int b = scan.nextInt();
        
        System.out.println(a+b);
        scan.close();
    }
    
}
```

<br>
Scanner를 사용하여 데이터 값을 받아 덧셈을 하였습니다.

<br>
scanner 객체뒤에 nextint(),nextLine()등을 이용해 숫자나 문자열의 데이터 값을 받을 수 있습니다.

<br>
다른 방법으로는 BufferReader 와 BufferWriter가 있습니다.
<br>

Scanner는 1KB 크기의 버퍼를 갖기 때문에 입력이 바로 전달되는 반면 BufferedReader는 8KB 크기의 버퍼를 가져 buffer에 입력들을
<br> 저장하였다 한 번에 전송하기 때문에 속도가 더 빠릅니다.
<br>

Scanner보다 속도가 빠르다는 장점이 있으니 코딩테스트때 자주 사용해봅시다.
<br>

### 아래 예시 코드를 실행해보며 데이터 입출력을 연습해봅시다.

<br>

### 빠른 A+B 백준 15552번 문제

<br>

```java

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.StringTokenizer;

public class Main {
    public static void main(String[] args) throws IOException{
        BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        StringTokenizer st;
        int B = Integer.parseInt(bf.readLine());
        for(int i =0; i<B; i++){
            st = new StringTokenizer(bf.readLine());
            bw.write((Integer.parseInt(st.nextToken()))+Integer.parseInt(st.nextToken())+"\n");
        }
        bw.close();
    }
}
```

<br>
<br>
