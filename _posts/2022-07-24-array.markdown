---
layout: post
title:  "Array & class"
description: Java에서 쓰는 Array 와 class에 대해 알아보자.
date: 2022-07-24  
categories: Java
---

# Array

배열(Array)이란 동일한 자료형의 데이터를 연속된 공간에 저장하기 위한 자료구조입니다.


한가지 종류의 변수들을 한번에 적을수 있어 변수의 선언을 줄여주고
반복문을 이용한 계산에 유리합니다.

## 배열을 선언하는 방법

### 자료형[] 변수 = {데이터1, 데이터2, 데이터3, ... };
<br>

``` java
String[] English = {"a","b","c"};
```

이 방법은 데이터들의 값을 알고 있을 때 사용하면 편리합니다. 

### 자료형 [] 변수 = new 자료형[배열 크기]
### 변수 [0] = 데이터 값;
### 변수 [1] = 데이터 값;
<br>

```java
int[] numbers = new int[2];

numbers[0] = 1;
numbers[1] = 2;
```

이 방법은 배열의 값은 모르지만 향후 값을 저장하기 위한 배열을 생성하고 싶은 경우에 주로 사용합니다.
<br>

```java
Scanner scan = new Scanner(System.in)
int A = scan.nextInt();

int[] numbers = new int[A];
```

### 자주 쓰게되는 메소드

``` java

int[] A = new int[3];

A.length; // 배열의 길이를 알고자할때 사용한다.

for(int i = 0; i<A.length; i++){
    //반복할 내용
}

Arrays.sort(A); // 배열을 오름차순으로 정렬한다.
Arrays.sort(A, Collections.reversOrder());

```

## for each문과 배열

배열을 사용하여 반복 시킬 때 for-each 문을 사용할 수 있다.

```java

public class ForEachEx01 {
	public static void main(String[] args) {
		int[] score = { 78, 70, 65, 98, 58 };
		int sum = 0;
		for (int i : score) { // 배열의 값이 있으면 자료형 변수로 값을 보내준다.
			sum += i; // sum = sum + i;
		}// 값이 없으면 종료
		System.out.println("점수 합계 : " + sum); // 결과 : 369
	}
}

```

<br><br>

# Class

붕어빵틀 이라고 생각하면 편하지만 정확히는 슈크림맛 붕어빵, 팥 붕어빵 등 여러가지의 종류의 객체를 만들 수 있는 것이다.

자바의 클래스는 class 키워드를 사용하여 선언한다.

## 클래스의 구성요소

## 필드

객체 내의 값을 저장할 멤버 변수를 필드라고 부릅니다.

### 변수 선언 방법<br>

```java
[접근제어자] 타입 변수명
```
<br>

## 자바 변수 유형
프로그램 코드 내에서 변수의 위치에 따라 변수를 구분할 수 있습니다.

클래스 내에 선언 된 변수는 위치에 따라 이름이 다르게 불리는데 저는 아래의 4개의 이름으로 분류하겠습니다.


### `멤버변수`
- 클래스부에 선언된 변수들로 객체의 속성에 해당합니다.
- `인스턴스 변수`와 `클래스 변수`로 구분됩니다.
<br>

### `인스턴스 변수`
- 클래스가 인스턴스될때 초기화 되는 변수입니다.
- 인스턴스를 통해서만 접근할 수 있습니다.
<br>

### `지역 변수`
- 메소드 안에서 선언된 변수입니다.
- 멤버변수와 동일한 이름을 가질수 있습니다.
<br>

### `클래스 변수`
- static으로 선언된 변수입니다.
- main 메소드에서 참조가 가능합니다.
- 인스턴스 생성없이 `클래스이름.변수명`으로 사용가능합니다.
<br><br>

## 변수 예시<br>

```java
public class Variable {
    int first;// 멤버변수, 인스턴스 변수

    static int second;//멤버변수, 클래스 변수

    public void printName(String name){
        //지역변수
        String prtMsg = name + "Hello";
        System.out.println(prtMsg);
    }
    
    public static void main(String[] args) {
        //인스턴스 생성
        Variable mc = new Variable();
        //인스턴스 변수 사용
        mc.first = 100;
        //클래스 변수사용
        Variable.second = 50; // b = 50으로 사용해도된다.

        mc.printName("vert");

        System.out.printf("%d,%d",mc.first,Variable.second);
    }
}
```

<br>

## 생성자
<br>
<br>
<br>
